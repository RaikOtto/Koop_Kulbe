{
    "collab_server" : "",
    "contents" : "require('NanoStringNorm')\nlibrary(\"stringr\")\n\ncohorts_t = read.table(\"~/Koop_Kulbe/Misc/cohorts.tsv\",sep=\"\\t\",header =T, stringsAsFactors = F)\n#raw_data  = read.markup.RCC( rcc.path = \"~/Koop_Kulbe/Raw_data/24_samples/Malignant_Benign/\")\n#raw_data  = read.markup.RCC( rcc.path = \"~/Koop_Kulbe/Raw_data/24_samples/Healthy_Malignant//\")\nraw_data  = read.markup.RCC( rcc.path = \"~/Koop_Kulbe/Raw_data/24_samples/Healthy_Benign//\")\n\nsample_names = colnames(raw_data$x)[-seq(3)]\nsample_names = str_replace(sample_names, pattern = \"^X\",\"\")\nsample_names = str_replace_all(sample_names, pattern = \"\\\\.\",\"_\")\ns_match = match(sample_names, cohorts_t$Sample_Id, nomatch = 0)\ncohort_names = cohorts_t$New_Id[s_match]\n\nmeta_data = data.frame( cohorts_t$Malignant[ s_match ] )\nrownames( meta_data ) = colnames(raw_data$x)[-seq(3)]#cohorts_t$New_Id[ s_match]\ncolnames(meta_data) = \"Group\"\nmeta_data$Group[ meta_data$Group == 1 ] = 2\nmeta_data$Group[ is.na(meta_data$Group)] = 1\n\nnorm.comp.results.test = norm.comp(raw_data, verbose = F)\neset = NanoStringNorm::NanoStringNorm( \n  raw_data,\n  CodeCount.methods = \"sum\",\n  Background.methods = \"mean.2sd\",\n  SampleContent.methods = \"none\",\n  OtherNorm.methods = \"vsn\",\n  take.log = T,\n  round.values = T,\n  return.matrix.of.endogenous.probes = F,\n  traits = meta_data,\n  verbose = T\n)\n\nm    = matrix( as.character(unlist( eset$normalized.data)), nrow=  dim(eset$normalized.data)[1], ncol = dim(eset$normalized.data)[2])\ninfo = m[,seq(3)]\ndata = matrix( as.double(m[,-seq(3)]), nrow=  dim(eset$normalized.data)[1], ncol = dim(eset$normalized.data)[2]-3)\ndata = round(data,1)\n\nrownames(data) = rownames(eset$normalized.data)\ncol_labels = str_replace( colnames(eset$normalized.data)[-seq(3)], pattern = \"^X\", \"\") \n\ncolnames(data) = col_labels\nres  = cbind( info,data )\nres = cbind(rownames(eset$normalized.data), res)\n\npure_data = as.character(res)[-seq(dim(eset$normalized.data)[1]*4)]\npure_data = matrix( as.double( pure_data ), nrow = dim(eset$normalized.data)[1] )\nrownames( pure_data ) = info[ ,2 ]\ncolnames( pure_data ) = cohorts_t$New_Id[s_match]\n\npure_data = pure_data[ info[,1] == \"Endogenous\"  ,]\n\ncontrols = which( meta_data$Group == 1 )\ncase     = which( meta_data$Group == 2 )\n\nmean_controls = rowMeans( pure_data[, controls] )\nmean_case     = rowMeans( pure_data[, case] )\n\ndif = as.double(mean_case - mean_controls)\n\npure_data = pure_data[ order( dif ) ,order(meta_data$Group)]\ncontrols  = controls[order(meta_data$Group)]\ncase      = case[order(meta_data$Group)]\n\nexport_pure_data = cbind( rownames(pure_data) ,round( dif[order(dif)], 1 ),round(mean_controls[order(dif)],1),round(mean_case[order(dif)],1),pure_data)\ncolnames( export_pure_data ) = c( c(\"Gene\",\"Dif\",\"Mean_Ctrl\",\"Mean_Case\")  ,colnames(pure_data))\n\nexport_pure_data = export_pure_data[order(abs(as.double(as.character(export_pure_data[,2]))), decreasing = T),]\n\n#write.table(\"~/Koop_Kulbe/Results/Malignant_Benign/mean_housekeeping_normalized_data_blood.tsv\",x=export_pure_data,sep=\"\\t\",row.names =F, quote =F)\n#write.table(\"~/Koop_Kulbe/Results/Malignant_Benign/differential_expression_blood.tsv\",x=cbind( info,eset$gene.summary.stats.norm ),sep=\"\\t\",row.names =F, quote =F)\n#write.table(\"~/Koop_Kulbe/Results/Healthy_Malignant//mean_housekeeping_normalized_data_blood.tsv\",x=export_pure_data,sep=\"\\t\",row.names =F, quote =F)\n#write.table(\"~/Koop_Kulbe/Results/Healthy_Malignant//differential_expression_blood.tsv\",x=cbind( info,eset$gene.summary.stats.norm ),sep=\"\\t\",row.names =F, quote =F)\nwrite.table(\"~/Koop_Kulbe/Results/Healthy_Benign/mean_housekeeping_normalized_data_blood.tsv\",x=export_pure_data,sep=\"\\t\",row.names =F, quote =F)\nwrite.table(\"~/Koop_Kulbe/Results/Healthy_Benign//differential_expression_blood.tsv\",x=cbind( info,eset$gene.summary.stats.norm ),sep=\"\\t\",row.names =F, quote =F)\n",
    "created" : 1519126649804.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3670041830",
    "id" : "69570B4B",
    "lastKnownWriteTime" : 1502365099,
    "last_content_update" : 1502365099,
    "path" : "~/Koop_Kulbe/Scripts/Nanostring_analysis.R",
    "project_path" : "Scripts/Nanostring_analysis.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}